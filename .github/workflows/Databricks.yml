name: DB Notebooks

on:
  workflow_dispatch:

# Define environment variables
env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout the code repository
    - name: Checkout Code
      uses: actions/checkout@v2

    # Install jq to parse JSON responses from the curl command
    - name: Install jq
      run: sudo apt-get install jq

    # Set up Python environment
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    # Install Python dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install databricks-api

    # Extract the access token from the Azure AD authentication endpoint using curl
    - name: Extract access_token
      id: extract-value
      run: |
        ACCESS_TOKEN=$(curl -X POST -H 'Content-Type: application/x-www-form-urlencoded' \
        https://login.microsoftonline.com/191b00ea-edcc-406c-8456-dc29abc0f10f/oauth2/v2.0/token \
        -d "client_id=${{ env.ARM_CLIENT_ID }}" \
        -d "grant_type=client_credentials" \
        -d "scope=2ff814a6-3304-4ab8-85cb-cd0e6f879c1d/.default" \
        -d "client_secret=${{ env.ARM_CLIENT_SECRET }}" | jq -r '.access_token')
        echo "::set-output name=access_token::$ACCESS_TOKEN"

    # Run the Python script that uses the access token to perform Databricks model training
    - name: Run Model Training
      run: |
        python PythonFile/databricks-automation.py ${{ steps.extract-value.outputs.access_token}} # Use the access token output variable as an input parameter to the Python script